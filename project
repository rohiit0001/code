#include <iostream>
#include <stack>
#include <vector>

using namespace std;

// Function to calculate span of stock prices
vector<int> calculateSpan(vector<int> &prices) {
    int n = prices.size();
    vector<int> span(n);       // To store the span values
    stack<int> s;              // Stack to store indices

    for (int i = 0; i < n; i++) {
        // Pop elements from stack while current price is higher
        while (!s.empty() && prices[s.top()] <= prices[i]) {
            s.pop();
        }

        // Calculate span
        span[i] = (s.empty()) ? (i + 1) : (i - s.top());

        // Push this element index to stack
        s.push(i);
    }

    return span;
}

int main() {
    int n;
    cout << "Enter the number of days: ";
    cin >> n;

    vector<int> prices(n);
    cout << "Enter the stock prices for " << n << " days:\n";
    for (int i = 0; i < n; i++) {
        cin >> prices[i];
    }

    vector<int> span = calculateSpan(prices);

    cout << "\nStock Span for each day:\n";
    for (int i = 0; i < n; i++) {
        cout << "Day " << i + 1 << " (" << prices[i] << "): " << span[i] << endl;
    }

    return 0;
}
